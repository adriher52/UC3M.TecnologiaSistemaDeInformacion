<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="10.4.3_a45545bc0fa864b6dd457e084eb653f6e2004e05">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.example.practica11.practica11"/>
        </type-metadata>
        <memory-model-settings/>
        <named-schemas>
            <schema name="Order">
                <field description="The code of the execution" name="Symbol" type="string"/>
                <field description="The volume to be" name="Vol" type="int"/>
                <field description="The price of the order" name="Price" type="double"/>
                <field description="Determines if buys" name="Side" type="string"/>
            </schema>
            <schema name="Quote">
                <field description="The code of the execution" name="Symbol" type="string"/>
                <field description="The bid volume" name="BidVol" type="int"/>
                <field description="The bid price" name="BidPrice" type="double"/>
                <field description="The ask volume" name="AskVol" type="int"/>
                <field description="The ask price" name="AskPrice" type="double"/>
            </schema>
        </named-schemas>
        <constant expr="'BUY'" name="BUY"/>
        <constant expr="'SELL'" name="SELL"/>
        <dynamic-variables/>
        <data name="Ask_liquidity" shared="false" source="concrete" type="querytable">
            <param name="storage-method" value="heap"/>
            <param name="replicated" value="false"/>
            <table-schema schema="Quote">
                <primary-index type="btree">
                    <field name="AskPrice"/>
                    <field name="Symbol"/>
                </primary-index>
            </table-schema>
            <param name="truncate" value="false"/>
            <preload format="csv" mode="empty"/>
        </data>
        <data name="Bid_liquidity" shared="false" source="concrete" type="querytable">
            <param name="storage-method" value="disk"/>
            <param name="replicated" value="false"/>
            <table-schema schema="Quote">
                <primary-index type="btree">
                    <field name="BidPrice"/>
                    <field name="Symbol"/>
                </primary-index>
            </table-schema>
            <param name="truncate" value="false"/>
            <preload format="csv" mode="empty"/>
        </data>
        <stream name="Deustche" schema="Quote"/>
        <stream name="Manual" schema="Quote"/>
        <stream name="Nomura" schema="Quote"/>
        <stream name="Order_entry" schema="Order"/>
        <box name="Pre_tranding_filter" type="filter">
            <input port="1" stream="Order_entry"/>
            <output port="1" stream="reject_Output"/>
            <output port="2" stream="out:Pre_tranding_filter_2"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="(Symbol=='EURUED' ||Symbol=='EURCHF') &amp;&amp;(Vol&gt;=30 &amp;&amp; Vol&lt;= 150) &amp;&amp;(Side== BUY ||Side ==SELL)"/>
            <param name="expression.1" value="true"/>
        </box>
        <box name="Union" type="union">
            <input port="1" stream="Nomura"/>
            <input port="2" stream="Deustche"/>
            <input port="3" stream="Manual"/>
            <output port="1" stream="out:Union_1"/>
            <param name="strict" value="false"/>
        </box>
        <output-stream name="reject_Output"/>
        <box name="Order_Site_Splitter" type="filter">
            <input port="1" stream="out:Pre_tranding_filter_2"/>
            <output port="1" stream="out:Order_Site_Splitter_1"/>
            <output port="2" stream="out:Order_Site_Splitter_2"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="input1.Side == BUY"/>
            <param name="expression.1" value="true"/>
        </box>
        <box name="Tick_cleansing" type="filter">
            <input port="1" stream="out:Union_1"/>
            <output port="1" stream="out:Tick_cleansing_1"/>
            <output port="2" stream="Discarded_ticks"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="(Symbol=='EURUSD' || Symbol == 'EURCHF') &amp;&amp;(BidPrice&gt;0 &amp;&amp; AskPrice&gt;0) &amp;&amp; (BidVol&gt;0 &amp;&amp; AskVol&gt;0)"/>
            <param name="expression.1" value="true"/>
        </box>
        <output-stream name="Discarded_ticks"/>
        <box name="Buy_machine_engine" type="query">
            <input port="1" stream="out:Order_Site_Splitter_1"/>
            <output port="1" stream="Ask_matched_liquidity"/>
            <dataref id="querytable" name="Ask_liquidity"/>
            <param name="operation" value="read"/>
            <param name="where" value="expression"/>
            <param name="where-expression" value="current.Symbol == input1.Symbol&amp;&amp;current.AskPrice &lt;=input1.Price"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="ignore"/>
            <param name="no-match-mode" value="output-no-match-explicit"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="none"/>
                <item name="current" selection="all"/>
                <item name="old" selection="none"/>
                <item name="new" selection="none"/>
            </target-list>
            <target-list goal-schema="Quote" name="insert">
                <item name="input" selection="all"/>
            </target-list>
            <target-list goal-schema="Quote" name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list goal-schema="Quote" name="no-match">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="Symbol">'No_liquidity_found'</set>
                </expressions>
            </target-list>
        </box>
        <box name="Sell_machine_engine" type="query">
            <input port="1" stream="out:Order_Site_Splitter_2"/>
            <output port="1" stream="Bid_matched_liquidity"/>
            <dataref id="querytable" name="Bid_liquidity"/>
            <param name="operation" value="read"/>
            <param name="where" value="expression"/>
            <param name="where-expression" value="current.Symbol == input1.Symbol&amp;&amp;current.BidPrice &lt;=input1.Price"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="ignore"/>
            <param name="no-match-mode" value="output-no-match-explicit"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="none"/>
                <item name="current" selection="all"/>
            </target-list>
            <target-list goal-schema="Quote" name="insert">
                <item name="input" selection="all"/>
            </target-list>
            <target-list goal-schema="Quote" name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list goal-schema="Quote" name="no-match">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="Symbol">'No_liquidity_found'</set>
                </expressions>
            </target-list>
        </box>
        <box name="tick_spliter" type="split">
            <input port="1" stream="out:Tick_cleansing_1"/>
            <output port="1" stream="out:tick_spliter_1"/>
            <output port="2" stream="out:tick_spliter_2"/>
            <param name="output-count" value="2"/>
        </box>
        <output-stream name="Ask_matched_liquidity"/>
        <output-stream name="Bid_matched_liquidity"/>
        <box name="Ask_ticks_updater" type="query">
            <input port="1" stream="out:tick_spliter_2"/>
            <output port="1" stream="Ask_Updater_Output"/>
            <dataref id="querytable" name="Ask_liquidity"/>
            <param name="operation" value="write"/>
            <param name="where" value="primary-key"/>
            <param name="key-field.0" value="AskPrice"/>
            <param name="key-value.0" value="input1.AskPrice"/>
            <param name="key-field.1" value="Symbol"/>
            <param name="key-value.1" value="input1.Symbol"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="update"/>
            <param name="no-match-mode" value="output-no-match-null"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="none"/>
                <item name="old" selection="none"/>
                <item name="new" selection="all"/>
                <item name="current" selection="none"/>
            </target-list>
            <target-list goal-schema="Quote" name="insert">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="AskVol">input1.AskVol</set>
                </expressions>
            </target-list>
            <target-list goal-schema="Quote" name="update">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="AskVol">old.AskVol+input1.AskVol</set>
                </expressions>
            </target-list>
            <target-list goal-schema="Quote" name="no-match">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="AskVol">old.AskVol+input1.AskVol</set>
                </expressions>
            </target-list>
        </box>
        <box name="Bid_ticks_updater" type="query">
            <input port="1" stream="out:tick_spliter_1"/>
            <output port="1" stream="Bid_Updater_Output"/>
            <dataref id="querytable" name="Bid_liquidity"/>
            <param name="operation" value="write"/>
            <param name="where" value="primary-key"/>
            <param name="key-field.0" value="BidPrice"/>
            <param name="key-value.0" value="input1.BidPrice"/>
            <param name="key-field.1" value="Symbol"/>
            <param name="key-value.1" value="input1.Symbol"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="update"/>
            <param name="no-match-mode" value="output-no-match-null"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="none"/>
                <item name="old" selection="none"/>
                <item name="new" selection="all"/>
                <item name="current" selection="none"/>
            </target-list>
            <target-list name="insert">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="BidVol">input1.BidVol</set>
                </expressions>
            </target-list>
            <target-list name="update">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="BidVol">old.BidVol+input1.BidVol</set>
                </expressions>
            </target-list>
            <target-list goal-schema="Quote" name="no-match">
                <item name="input" selection="all"/>
                <expressions>
                    <set field="BidVol">old.BidVol+input1.BidVol</set>
                </expressions>
            </target-list>
        </box>
        <output-stream name="Ask_Updater_Output"/>
        <output-stream name="Bid_Updater_Output"/>
    </add>
</modify>
